## Settings

setenv TERM screen-256color
# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color
set -gs escape-time 0
#set -aq terminal-overrides ',xterm*:Cr=\E12;white\007'
#set -sa terminal-overrides ',xterm-256color:RGB'
#set -ga terminal-overrides ',xterm-256color:Tc'
set -ga terminal-overrides ',st-256color:Tc'

set -g default-shell /bin/zsh

set -g clock-mode-style 12
# set clock-mode-style 12

# Watch for activity in background windows
setw -g monitor-activity on

set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

## set window notifications
set -g visual-activity on
setw -g monitor-activity on
setw -g automatic-rename off

#set -g automatic-rename on # Set name to the active command
set -g automatic-rename off # Set name to the active command
set -g allow-rename off     # Allow printf '\033kWINDOW_NAME\033\\' to set name
set -g set-titles on       # Attempt to set client terminal title using tsl and fsl terminfo

# set status-interval 15
set -g status-keys emacs   # command prompt key binding style

set -g repeat-time 1000    # multiple commands to be entered without prefix-key again

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

set  -g history-limit 10000
setw -g aggressive-resize on

set -g display-panes-time 3000

set -gw xterm-keys on
set -g base-index 1 # Start window numbering at 1 instead of 0
set -g pane-base-index 1 # Start pane numbering at 1
set -g renumber-windows # Clean up after removing tabs

## Key bindings

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | \
  grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -r + resize-pane -Z

bind-key -n C-M-l next-window
bind-key -n C-M-h previous-window

bind-key -r M-o rotate-window -U

unbind-key Space
bind-key -r Space next-layout

# reload tmux config
unbind-key r
bind-key r source-file ~/.tmux.conf

bind-key R refresh-client
# Send C-L to term and clear the pane's history
bind-key c-l send-keys 'c-l'
bind-key k send-keys 'c-k'   # Send kill to EOL to term
bind-key c-k send-keys -R \; clear-history # Clear scroll back and reset pane

bind-key -r l last-window
bind-key -r n next-window
bind-key -r p previous-window

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"

# set -g default-command "reattach-to-user-namespace -l zsh"

if-shell "uname | grep -q Darwin" "source-file ~/.tmux/tmux-macosx.conf" "source-file ~/.tmux/tmux-linux.conf"

source $HOME/.tmux/colors/tomorrow.tmux
source $HOME/.tmux/plugins/wemux-powerlinish.tmux

# vim:foldmethod=marker:tw=400:nospell:
